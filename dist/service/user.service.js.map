{"version":3,"file":"user.service.js","sourceRoot":"","sources":["../../src/service/user.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAA2C;AAC3C,sCAAqC;AACrC,6BAA2C;AAC3C,4CAA2C;AAC3C,mDAAiD;AAEjD,wCAAwC;AAGxC,IAAa,WAAW;IAEtB,qBAAoB,IAAU,EAAU,MAAqB;QAAzC,SAAI,GAAJ,IAAI,CAAM;QAAU,WAAM,GAAN,MAAM,CAAe;QAD7D,aAAQ,GAAiB,IAAI,cAAO,EAAO,CAAC;IACoB,CAAC;IACjE,4BAAM,GAAN,UAAO,MAAc,EAAE,IAAS;QAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IACD,2BAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;QAAxC,iBAIC;QAHC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAM,EAAE,GAAG,aAAa,EAAE,EAAE,QAAQ,UAAA,EAAE,QAAQ,UAAA,EAAC,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,EAA3D,CAA2D,CAAC,CAAC;QACnJ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACD,4BAAM,GAAN;QAAA,iBAIC;QAHC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAM,EAAE,GAAG,cAAc,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,EAA5D,CAA4D,CAAC,CAAC;QACpI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACD,8BAAQ,GAAR,UAAS,QAAgB,EAAE,QAAgB;QACzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAM,EAAE,GAAG,gBAAgB,EAAE,EAAE,QAAQ,UAAA,EAAE,QAAQ,UAAA,EAAC,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAArB,CAAqB,CAAC,CAAC;QAChH,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACD,2BAAK,GAAL,UAAM,IAAqB;QAA3B,iBAMC;QANK,qBAAA,EAAA,YAAqB;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAM,EAAE,GAAG,cAAc,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,EAA3D,CAA2D,CAAC,CAAC;QACrI,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACH,kBAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,WAAW;IADvB,iBAAU,EAAE;qCAGe,WAAI,EAAkB,8BAAa;GAFlD,WAAW,CA4BvB;AA5BY,kCAAW","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ApiUrl } from '@ts-webapp/common';\r\nimport { LoaderService } from './loader.service';\r\n\r\n// TODO: correct the url in the requests\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  activity: Subject<any> = new Subject<any>();\r\n  constructor(private http: Http, private loader: LoaderService) {}\r\n  result(action: string, data: any) {\r\n    this.loader.unload(action);\r\n    this.activity.next(data);\r\n  }\r\n  login(username: string, password: string): Subject<any> {\r\n    this.loader.load('login');\r\n    this.http.post(ApiUrl() + '/user/login', { username, password}).subscribe(response => this.result('login', response.json().ok && response.json()));\r\n    return this.activity;\r\n  }\r\n  logout(): Observable<any> {\r\n    this.loader.load('logout');\r\n    this.http.post(ApiUrl() + '/user/logout', null).subscribe(response => this.result('logout', response.json().ok && response.json()));\r\n    return this.activity;\r\n  }\r\n  register(username: string, password: string): Observable<any> {\r\n    this.http.post(ApiUrl() + '/user/register', { username, password}).subscribe(response => console.log(response));\r\n    return this.activity;\r\n  }\r\n  check(post: boolean = false): Observable<any> {\r\n    if (post) {\r\n      this.loader.load('check');\r\n      this.http.post(ApiUrl() + '/user/logged', null).subscribe(response => this.result('check', response.json().ok && response.json()));\r\n    }\r\n    return this.activity;\r\n  }\r\n}"]}