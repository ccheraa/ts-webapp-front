{"version":3,"file":"app.service.js","sourceRoot":"","sources":["../../src/service/app.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  valueMainPane = false;\r\n  subjectMainPane = new Subject<boolean>();\r\n  valueSidePane = false;\r\n  subjectSidePane = new Subject<boolean>();\r\n  valueDark = false;\r\n  subjectDark = new Subject<boolean>();\r\n  valueRTL = false;\r\n  subjectRTL = new Subject<boolean>();\r\n  // constructor(private http: Http) {}\r\n  checkMainPane(): Observable<boolean> {\r\n    return this.subjectMainPane;\r\n  }\r\n  toggleMainPane(): void {\r\n    this.valueMainPane = !this.valueMainPane;\r\n    this.subjectMainPane.next(this.valueMainPane);\r\n  }\r\n  setMainPane(value: boolean): void {\r\n    if (this.valueMainPane !== value) {\r\n      this.valueMainPane = value;\r\n      this.subjectMainPane.next(this.valueMainPane);\r\n    }\r\n  }\r\n  getMainPane(): boolean {\r\n    return this.valueMainPane;\r\n  }\r\n  checkSidePane(): Observable<boolean> {\r\n    return this.subjectSidePane;\r\n  }\r\n  toggleSidePane(): void {\r\n    this.valueSidePane = !this.valueSidePane;\r\n    this.subjectSidePane.next(this.valueSidePane);\r\n  }\r\n  setSidePane(value: boolean): void {\r\n    if (this.valueSidePane !== value) {\r\n      this.valueSidePane = value;\r\n      this.subjectSidePane.next(this.valueSidePane);\r\n    }\r\n  }\r\n  getSidePane(): boolean {\r\n    return this.valueSidePane;\r\n  }\r\n  checkDark(): Observable<boolean> {\r\n    return this.subjectDark;\r\n  }\r\n  toggleDark(): void {\r\n    this.valueDark = !this.valueDark;\r\n    this.subjectDark.next(this.valueDark);\r\n  }\r\n  setDark(value: boolean): void {\r\n    if (this.valueDark !== value) {\r\n      this.valueDark = value;\r\n      this.subjectDark.next(this.valueDark);\r\n    }\r\n  }\r\n  getDark(): boolean {\r\n    return this.valueDark;\r\n  }\r\n  checkRTL(): Observable<boolean> {\r\n    return this.subjectRTL;\r\n  }\r\n  toggleRTL(): void {\r\n    this.valueRTL = !this.valueRTL;\r\n    this.subjectRTL.next(this.valueRTL);\r\n  }\r\n  setRTL(value: boolean): void {\r\n    if (this.valueRTL !== value) {\r\n      this.valueRTL = value;\r\n      this.subjectRTL.next(this.valueRTL);\r\n    }\r\n  }\r\n  getRTL(): boolean {\r\n    return this.valueRTL;\r\n  }\r\n}"]}