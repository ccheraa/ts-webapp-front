{"version":3,"file":"date-editor.directive.js","sourceRoot":"","sources":["../../src/directive/date-editor.directive.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAU,YAAY,EAAE,MAAM,eAAe,CAAC;AAKzG,IAAa,mBAAmB;IAI9B,6BAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;QAHxB,eAAU,GAAuB,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;IAIlE,CAAC;IAED,sCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzE,CAAC;IACuB,sCAAQ,GAAR,UAAS,KAAK;QACpC,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAEH,0BAAC;AAAD,CAAC,AAxBD,IAwBC;AAvBW;IAAT,MAAM,EAAE;8BAAa,YAAY;uDAAgC;AACzD;IAAR,KAAK,EAAE;8BAAO,IAAI;iDAAC;AAgBI;IAAvB,YAAY,CAAC,QAAQ,CAAC;;;;mDAItB;AAtBU,mBAAmB;IAH/B,SAAS,CAAC;QACT,QAAQ,EAAE,cAAc;KACzB,CAAC;qCAKwB,UAAU;GAJvB,mBAAmB,CAwB/B;SAxBY,mBAAmB","sourcesContent":["import { Directive, ElementRef, Output, Input, EventEmitter, OnInit, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[date-value]'\r\n})\r\nexport class DateEditorDirective implements OnInit {\r\n  @Output() dateChange: EventEmitter<Date> = new EventEmitter(true);\r\n  @Input() date: Date;\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (typeof this.date === 'undefined') {\r\n      this.date = new Date();\r\n      this.dateChange.emit(this.date);\r\n    }\r\n    if (!(this.date instanceof Date)) {\r\n      this.date = new Date(this.date);\r\n      this.dateChange.emit(this.date);\r\n    }\r\n    this.el.nativeElement.value = this.date.toISOString().substring(0, 10);\r\n  }\r\n  @HostListener('change') onChange(event) {\r\n    let value = this.el.nativeElement.value.split('-');\r\n    this.date.setFullYear(value[0], value[1] - 1, value[2]);\r\n    this.dateChange.emit(this.date);\r\n  }\r\n\r\n}"]}